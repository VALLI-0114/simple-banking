accounts = {}

def create_account():
    account_number = input("Enter a unique account number: ")
    if account_number in accounts:
        print("Account number already exists. Try a different one.")
        return
    name = input("Enter account holder's name: ")
    while True:
        try:
            initial_deposit = float(input("Enter initial deposit amount: "))
            if initial_deposit < 0:
                print("Deposit amount cannot be negative.")
            else:
                break
        except ValueError:
            print("Invalid input. Please enter a valid amount.")

    accounts[account_number] = {
        "Name": name,
        "Balance": initial_deposit
    }
    print(f"Account created successfully for {name} with Account Number: {account_number}")

def check_balance():
    account_number = input("Enter your account number: ")
    if account_number in accounts:
        print(f"Account Holder: {accounts[account_number]['Name']}")
        print(f"Current Balance: ${accounts[account_number]['Balance']:.2f}")
    else:
        print("Account not found.")

def deposit():
    account_number = input("Enter your account number: ")
    if account_number in accounts:
        while True:
            try:
                amount = float(input("Enter amount to deposit: "))
                if amount < 0:
                    print("Amount cannot be negative.")
                else:
                    accounts[account_number]['Balance'] += amount
                    print(f"${amount:.2f} deposited successfully.")
                    print(f"New Balance: ${accounts[account_number]['Balance']:.2f}")
                    break
            except ValueError:
                print("Invalid input. Please enter a valid amount.")
    else:
        print("Account not found.")

def withdraw():
    account_number = input("Enter your account number: ")
    if account_number in accounts:
        while True:
            try:
                amount = float(input("Enter amount to withdraw: "))
                if amount < 0:
                    print("Amount cannot be negative.")
                elif amount > accounts[account_number]['Balance']:
                    print("Insufficient balance.")
                else:
                    accounts[account_number]['Balance'] -= amount
                    print(f"${amount:.2f} withdrawn successfully.")
                    print(f"New Balance: ${accounts[account_number]['Balance']:.2f}")
                    break
            except ValueError:
                print("Invalid input. Please enter a valid amount.")
    else:
        print("Account not found.")

def menu():
    while True:
        print("\n--- Simple Banking System Menu ---")
        print("1. Create Account")
        print("2. Check Balance")
        print("3. Deposit Money")
        print("4. Withdraw Money")
        print("5. Exit")

        choice = input("Enter your choice (1-5): ")

        if choice == '1':
            create_account()
        elif choice == '2':
            check_balance()
        elif choice == '3':
            deposit()
        elif choice == '4':
            withdraw()
        elif choice == '5':
            print("Thank you for using the banking system. Goodbye!")
            break
        else:
            print("Invalid choice. Please select a valid option.")


if __name__ == "__main__":
    menu()
